
services:
  trino-coordinator:
    image: trinodb/trino:latest
    container_name: trino-coordinator
    platform: linux/amd64
    hostname: coordinator
    volumes:
      - ./coordinator-config:/etc/trino
      - trino-data:/etc/trino
    ports:
      - "8080:8080"
    networks:
      - trino-network
    depends_on:
      - minio

  trino-worker-1:
    image: trinodb/trino:latest
    container_name: trino-worker-1
    platform: linux/amd64
    hostname: worker1
    volumes:
      - ./worker-config:/etc/trino
      - trino-data:/etc/trino
    networks:
      - trino-network
    depends_on:
      - trino-coordinator

  trino-worker-2:
    image: trinodb/trino:latest
    container_name: trino-worker-2
    platform: linux/amd64
    hostname: worker2
    volumes:
      - ./worker-config:/etc/trino
      - trino-data:/etc/trino
    networks:
      - trino-network
    depends_on:
      - trino-coordinator

  minio:
    image: quay.io/minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - trino-network

  mc:
    image: minio/mc
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      while ! /usr/bin/mc alias set local http://minio:9000 admin password > /dev/null 2>&1; do
        sleep 3;
      done;
      echo 'MinIO is ready!';
      if ! /usr/bin/mc ls local/trino-bucket > /dev/null 2>&1; then
        /usr/bin/mc mb local/trino-bucket;
        /usr/bin/mc policy set public local/trino-bucket;
      else
        echo 'Bucket already exists, skipping creation.';
      fi;
      echo 'MinIO Client is now running...';
      tail -f /dev/null;
      "
    networks:
      - trino-network

networks:
  trino-network:
    driver: bridge

volumes:
  trino-data:
  minio_data:
